[tox]
no_package = true
min_version = 4.0
env_list = py311

[testenv]
description = run e2e tests
allowlist_externals = poetry
pass_env =
    VECTOR_DATABASE_TYPE
    ASTRA_DB_APPLICATION_TOKEN
    ASTRA_DB_API_ENDPOINT
    ASTRA_DB_ID
    ASTRA_DB_ENV
    OPENAI_API_KEY
    AZURE_OPENAI_API_KEY
    AZURE_OPENAI_ENDPOINT
    AZURE_BLOB_STORAGE_CONNECTION_STRING
    GCLOUD_ACCOUNT_KEY_JSON
    GOOGLE_API_KEY
    AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY
    BEDROCK_AWS_REGION
    HUGGINGFACE_HUB_KEY
    NVIDIA_API_KEY
    LANGCHAIN_API_KEY
    LANGCHAIN_TRACING_V2
    LANGCHAIN_ENDPOINT
    LANGCHAIN_PROJECT
    LLAMA_CLOUD_API_KEY
    UNSTRUCTURED_API_KEY
    UNSTRUCTURED_API_URL
commands =
    poetry lock
    poetry install --no-root --only main,test
    poetry run pytest --disable-warnings --junit-xml=results.xml {posargs:e2e_tests}

[testenv:langchain]
allowlist_externals =
    poetry
    cp
commands =
    cp pyproject.langchain.toml pyproject.toml
    poetry lock
    poetry install --no-root --only main,test
    poetry run pytest --disable-warnings --junit-xml=results.xml {posargs:e2e_tests}

[testenv:llamaindex]
allowlist_externals =
    poetry
    cp
commands =
    cp pyproject.llamaindex.toml pyproject.toml
    poetry lock
    poetry install --no-root --only main,test
    poetry run pytest --disable-warnings --junit-xml=results.xml {posargs:e2e_tests}

[testenv:ragstack-ai-latest]
envdir = {toxworkdir}/.ragstack-ai-latest
allowlist_externals =
    poetry
    cp
commands =
    cp pyproject.ragstack-ai.toml pyproject.toml
    poetry add "ragstack-ai@latest"
    poetry lock
    poetry install --no-root --only main,test
    poetry run pytest --disable-warnings --junit-xml=results.xml {posargs:e2e_tests}

[testenv:lint]
description = lint
skip_install = true
commands =
    poetry install --no-root --only lint
    poetry run ruff format --diff .
    poetry run ruff check --select I .
    poetry run ruff check .

[testenv:fix-lint]
description = fix lint
skip_install = true
commands =
    poetry install --no-root --only lint
    poetry run ruff format .
    poetry run ruff check --fix --select I .
    poetry run ruff check --fix .

[testenv:get-latest-ragstack-ai-version]
description = get latest ragstack ai version
skip_install = true
commands =
    pip install ragstack-ai -U
    python -c 'from importlib.metadata import version; print(version("ragstack-ai"))'
