[tool.poetry]
name = "ragstack-ai-llamaindex"
version = "1.0.1"
description = "DataStax RAGStack Llama Index"
license = "BUSL-1.1"
authors = ["DataStax"]
readme = "README.md"
repository = "https://github.com/datastax/ragstack-ai"
documentation = "https://docs.datastax.com/en/ragstack"
packages = [{ include = "ragstack_llamaindex" }]

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
astrapy = "^1"
cassio = "~0.1.4"
unstructured = "0.12.5"
ragstack-ai-colbert = "1.0.1"

# llama-index
llama-index = "0.10.31"
llama-index-vector-stores-astra-db = "0.1.7"
llama-index-vector-stores-cassandra = "0.1.3"
llama-index-embeddings-langchain = "0.1.2"
llama-parse = "0.4.1"
# optional integrations
## azure
llama-index-llms-azure-openai = { version = "0.1.6", optional = true }
llama-index-embeddings-azure-openai = { version = "0.1.7", optional = true }
## bedrock
llama-index-llms-bedrock = { version = "0.1.7", optional = true }
llama-index-embeddings-bedrock = { version = "0.1.4", optional = true }
## google
llama-index-llms-gemini = { version = "0.1.7", optional = true }
llama-index-multi-modal-llms-gemini = { version = "0.1.5", optional = true }
llama-index-llms-vertex = { version = "0.1.5", optional = true }
llama-index-embeddings-gemini = { version = "0.1.6", optional = true }

[tool.poetry.extras]
colbert = ["ragstack-ai-colbert"]
google = ["llama-index-llms-gemini", "llama-index-multi-modal-llms-gemini", "llama-index-llms-vertex", "llama-index-embeddings-gemini"]
azure = ["llama-index-llms-azure-openai", "llama-index-embeddings-azure-openai"]
bedrock = ["llama-index-llms-bedrock", "llama-index-embeddings-bedrock"]

[tool.poetry.group.test.dependencies]
ragstack-ai-tests-utils = { path = "../tests-utils", develop = true }
ragstack-ai-colbert = { path = "../colbert", develop = true }