[tox]
no_package = true
min_version = 4.0
env_list = lint, py311

[testenv]
description = run e2e tests
pass_env =
    ASTRA_DB_TOKEN
    ASTRA_DB_ENDPOINT
    ASTRA_DB_ID
    OPEN_AI_KEY
    AZURE_OPEN_AI_KEY
    AZURE_OPEN_AI_ENDPOINT
    GCLOUD_ACCOUNT_KEY_JSON
    GOOGLE_API_KEY
    AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY
    BEDROCK_AWS_REGION
    HUGGINGFACE_HUB_KEY
deps =
    poetry
commands =
    poetry install --no-root
    poetry run pytest --disable-warnings {posargs:e2e_tests}

[testenv:langchain]
allowlist_externals = cp
commands =
    cp pyproject.langchain.toml pyproject.toml
    poetry lock
    poetry install --no-root
    poetry run pytest --disable-warnings {posargs:e2e_tests}

[testenv:llamaindex]
allowlist_externals = cp
commands =
    cp pyproject.llamaindex.toml pyproject.toml
    poetry lock
    poetry install --no-root
    poetry run pytest --disable-warnings {posargs:e2e_tests}

[testenv:ragstack-ai-latest]
envdir = {toxworkdir}/.ragstack-ai-latest
allowlist_externals = cp
commands =
    cp pyproject.ragstack-ai.toml pyproject.toml
    poetry add ragstack-ai@latest
    poetry lock
    poetry install --no-root
    poetry run pytest --disable-warnings {posargs:e2e_tests}

[testenv:lint]
description = lint
deps =
    black
    ruff
commands =
    black --check .
    ruff .

[testenv:fix-lint]
description = fix lint
deps =
    black
    ruff
commands =
    black .
    ruff --fix .

[testenv:get-latest-ragstack-ai-version]
description = get latest ragstack ai version
deps =
    poetry
commands =
    poetry run pip install ragstack-ai -U
    poetry run python -c 'from importlib.metadata import version; print(version("ragstack-ai"))'
