name: Daily LangChain master
on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 1 * * *'

jobs:
  tests:
    name: LangChain Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: 'Setup: Python 3.11'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry

      - name: Clone and build LangChain
        run: |
          git clone https://github.com/langchain-ai/langchain.git --depth 1 --branch master --single-branch langchain-master
          cd langchain-master/libs/langchain
          poetry install
          poetry build
          python -m venv /tmp/venv
          source /tmp/venv/bin/activate
          
          pip install dist/langchain-*.whl
          

      - name: Run E2E tests
        env:
          ASTRA_DEV_DB_TOKEN: "${{ secrets.E2E_TESTS_ASTRA_DEV_DB_TOKEN }}"
          ASTRA_DEV_DB_ENDPOINT: "${{ secrets.E2E_TESTS_ASTRA_DEV_DB_ENDPOINT }}"
          ASTRA_PROD_DB_TOKEN: "${{ secrets.E2E_TESTS_ASTRA_DB_TOKEN }}"
          ASTRA_PROD_DB_ENDPOINT: "${{ secrets.E2E_TESTS_ASTRA_DB_ENDPOINT }}"
          OPEN_AI_KEY: "${{ secrets.E2E_TESTS_OPEN_AI_KEY }}"
          AZURE_OPEN_AI_KEY: "${{ secrets.E2E_TESTS_AZURE_OPEN_AI_KEY }}"
          AZURE_OPEN_AI_ENDPOINT: "${{ secrets.E2E_TESTS_AZURE_OPEN_AI_ENDPOINT }}"
          GCLOUD_ACCOUNT_KEY_JSON: "${{ secrets.E2E_TESTS_GCLOUD_ACCOUNT_KEY_JSON }}"
        run: |
          source /tmp/venv/bin/activate
          pip install pytest astrapy openai tiktoken google-cloud-aiplatform boto3
          ./dev/run-e2e-tests.sh

      - name: Prepare report for Slack
        if: always()
        run: |
          
          if [ -f "ragstack-e2e-tests/generated-compatibility-matrix.txt" ]; then
            {
              echo -n '{"content": "'
              cat ragstack-e2e-tests/generated-compatibility-matrix.txt | sed 's/"/\\"/g' | while IFS= read -r line; do
                echo -n "$line\n"
              done
              echo "\",\"commit\":\"https://github.com/langchain-ai/langchain/commits/$(cd langchain-master && git rev-parse --short HEAD)\",\"url\":\"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\",\"type\":\"langchain\"}"
            } > slack-report.json
            echo "Slack report generated"
            cat slack-report.json
          else
            echo "{}" > slack-report.json
          fi

      - name: Dump report on Slack
        if: always() && (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch')
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload-file-path: "./slack-report.json"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}