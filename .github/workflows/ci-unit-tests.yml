name: CI - RAGStack tests
on:
  pull_request:
    branches:
      - main

concurrency:
  group: ragstack-tests-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-docker:
    name: Docker
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Docker examples - basic
        run: |
          docker --version
          cd docker/examples/basic
          sudo docker build -t ragstack-basic .

      - name: Docker examples - multistage
        run: |
          cd docker/examples/multistage
          sudo docker build -t ragstack-multistage .
      - name: Docker examples - local llm
        run: |
          cd docker/examples/local-llm
          sudo docker build -t local-llm .

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: "Setup: Python 3.11"
        uses: ./.github/actions/setup-python

      - name: Run lint
        uses: ./.github/actions/lint

      - name: "Unit tests (root)"
        run: tox -e unit-tests

      - name: "Unit tests (colbert)"
        run: tox -e unit-tests -c libs/colbert

      - name: "Unit tests (langchain)"
        run: tox -e unit-tests -c libs/langchain

      - name: "Unit tests (llamaindex)"
        run: tox -e unit-tests -c libs/llamaindex

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: "Setup: Python 3.11"
        uses: ./.github/actions/setup-python

      - name: Compute db name
        id: db-name
        run: |
          echo "db-name=${{ github.run_id}}-$(echo $(for((i=1;i<=8;i++))
          do printf '%s' "${RANDOM:0:1}"; done) | tr '[0-9]' '[a-z]')" >> $GITHUB_OUTPUT

      - name: Setup AstraDB
        uses: ./.github/actions/setup-astra-db
        id: astra-db
        with:
          astra-token: ${{ secrets.E2E_TESTS_ASTRA_DEV_DB_TOKEN }}
          db-name: ${{ steps.db-name.outputs.db-name }}
          env: "DEV"
          region: "us-west-2"
          cloud: "aws"

      - name: "Integration tests"
        env:
          ASTRA_DB_TOKEN: "${{ secrets.E2E_TESTS_ASTRA_DEV_DB_TOKEN }}"
          ASTRA_DB_ID: "${{ steps.astra-db.outputs.db_id }}"
          ASTRA_DB_ENV: "DEV"
        run: |
          set -ex
          du -sh ~/*
          du -sh *
          du -sh libs/*
          du -sh libs/colbert/*
          du -sh libs/langchain/*
          du -sh libs/llamaindex/*
          rm -rf **/.tox
          du -sh ~/*
          du -sh *
          du -sh libs/*
          du -sh libs/colbert/*
          du -sh libs/langchain/*
          du -sh libs/llamaindex/*
          tox -e integration-tests -c libs/colbert
          du -sh ~/*
          du -sh *
          du -sh libs/*
          du -sh libs/colbert/*
          du -sh libs/langchain/*
          du -sh libs/llamaindex/*
          rm -rf **/.tox
          du -sh libs/*
          du -sh libs/colbert/*
          du -sh libs/langchain/*
          du -sh libs/llamaindex/*
          tox -e integration-tests -c libs/llamaindex
          du -sh ~/*
          du -sh *
          du -sh libs/colbert/*
          du -sh libs/langchain/*
          du -sh libs/llamaindex/*
          rm -rf **/.tox
          du -sh libs/colbert/*
          du -sh libs/langchain/*
          du -sh libs/llamaindex/*
          tox -e integration-tests -c libs/langchain
          du -sh libs/colbert/*
          du -sh libs/langchain/*
          du -sh libs/llamaindex/*

      - name: Cleanup AstraDB
        uses: ./.github/actions/cleanup-astra-db
        if: ${{ always() }}
        with:
          astra-token: ${{ secrets.E2E_TESTS_ASTRA_DEV_DB_TOKEN }}
          db-name: ${{ steps.db-name.outputs.db-name }}
          env: "DEV"
