name: Astra DB Setup
description: Setup a new database in Astra DB

inputs:
  astra-token:
    required: true
    description: 'Astra DB application token'
  db-name:
    required: true
    description: 'Astra DB database name'
  env:
    required: true
    description: 'Astra DB env'
  region:
    required: true
    description: 'Astra DB region'

outputs:
  db_endpoint:
    description: "Full URL endpoint of the database"
    value: ${{ steps.db-setup.outputs.db_endpoint }}
  db_id:
    description: "Database ID"
    value: ${{ steps.db-setup.outputs.db_id }}
runs:
  using: "composite"
  steps:
  - name: Create a new database
    shell: bash
    id: db-setup
    env:
      TERM: linux
    run: |
      set -x
      (curl -Ls "https://dtsx.io/get-astra-cli" | bash) || true
      text=$(/home/runner/.astra/cli/astra db describe "${{ inputs.db-name }}" --token "${{ inputs.astra-token }}" --env "${{ inputs.env }}" )
      database_id=$(echo "$text" | grep 'id' | awk -F '|' '{print $3}' | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
      echo "Found database id: $database_id"
      domain="astra"
      if [ "${{ inputs.env }}" == "DEV" ]; then
        domain="astra-dev"
      fi
      db_endpoint="https://${database_id}-${{ inputs.region }}.apps.${domain}.datastax.com"
      echo "Database endpoint: $db_endpoint"
      echo "db_endpoint=$db_endpoint" >> $GITHUB_OUTPUT
      echo "db_id=$database_id" >> $GITHUB_OUTPUT

