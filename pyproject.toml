[tool.poetry]
name = "ragstack-ai"
version = "0.10.0.post"
description = "DataStax RAGStack"
license = "BUSL-1.1"
authors = ["DataStax"]
readme = "PACKAGE_README.md"
repository = "https://github.com/datastax/ragstack-ai"
documentation = "https://docs.datastax.com/en/ragstack"
packages = [{ include = "ragstack" }]

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
astrapy = "~0.7.0"
cassio = "~0.1.4"
unstructured = "0.12.5"

# llama-index
llama-index = "0.10.28"
llama-index-vector-stores-astra-db = "0.1.5"
llama-index-vector-stores-cassandra = "0.1.3"
llama-index-embeddings-langchain = "0.1.2"
llama-parse = "0.4.0"
# optional integrations
## azure
llama-index-llms-azure-openai = { version = "0.1.5", optional = true }
llama-index-embeddings-azure-openai = { version = "0.1.6", optional = true }
## bedrock
llama-index-llms-bedrock = { version = "0.1.5", optional = true }
llama-index-embeddings-bedrock = { version = "0.1.4", optional = true }
## google
llama-index-llms-gemini = { version = "0.1.7", optional = true }
llama-index-multi-modal-llms-gemini = { version = "0.1.5", optional = true }
llama-index-llms-vertex = { version = "0.1.5", optional = true }
llama-index-embeddings-gemini = { version = "0.1.6", optional = true }


# langchain
langchain = "0.1.12"
langchain-core = "0.1.31"
langchain-community = "0.0.28"
langchain-astradb = "0.1.0"
langchain-openai = "0.0.8"
langchain-google-genai = { version = "1.0.1", optional = true }
langchain-google-vertexai = { version = "0.1.0", optional = true }
langchain-nvidia-ai-endpoints = { version = "0.0.3", optional = true }
colbert-ai = { version = "0.2.19", optional = true }
pyarrow = { version = "14.0.1", optional = true }
torch = { version = "2.2.1", optional = true }

[tool.poetry.extras]
langchain-google = ["langchain-google-genai", "langchain-google-vertexai"]
langchain-nvidia = ["langchain-nvidia-ai-endpoints"]
colbert = ["colbert-ai", "pyarrow", "torch"]

llama-index-google = ["llama-index-llms-gemini", "llama-index-multi-modal-llms-gemini", "llama-index-llms-vertex", "llama-index-embeddings-gemini"]
llama-index-azure = ["llama-index-llms-azure-openai", "llama-index-embeddings-azure-openai"]
llama-index-bedrock = ["llama-index-llms-bedrock", "llama-index-embeddings-bedrock"]


[tool.poetry.group.test.dependencies]
pytest = "*"
black = "*"
ruff = "*"
nbmake = "*"
testcontainers = "^3.7.1"
tox = "^4"

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.mypy]
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
follow_imports = "normal"
ignore_missing_imports = true
no_implicit_reexport = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
yamllint = "^1.34.0"
